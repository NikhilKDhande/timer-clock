{"version":3,"sources":["Session.js","Break.js","Timer.js","App.js","index.js"],"names":["Session","sessionLength","sessionIncrement","play","type","id","className","disabled","onClick","Break","breakLength","breakIncrement","changeTime","Timer","startTimer","resetTimer","formateTime","timeLeft","title","audio","preload","src","App","useState","setSessionLength","setBreakLength","setTimeLeft","timingType","setTimingType","setPlay","timeout","setTimeout","clock","document","getElementById","pause","currentTime","resetTime","clearTimeout","useEffect","e","value","currentTarget","prev","minutes","Math","floor","second","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ecce48e9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { IoMdAdd } from \"react-icons/io\";\r\nimport { AiOutlineMinus } from \"react-icons/ai\";\r\nconst Session = ({ sessionLength, sessionIncrement, type, play }) => {\r\n  // console.log(props.session.sessionTimeMin);\r\n  return (\r\n    <div id=\"session-label\">\r\n      <h2>Session Time</h2>\r\n      <div className=\"btn-container\">\r\n        <button\r\n          disabled={play}\r\n          className=\"btn\"\r\n          onClick={sessionIncrement}\r\n          id=\"session-increment\"\r\n        >\r\n          <IoMdAdd />\r\n        </button>\r\n        <h2 id=\"session-length\">{sessionLength}</h2>\r\n        <button\r\n          disabled={play}\r\n          className=\"btn\"\r\n          id=\"session-decrement\"\r\n          onClick={sessionIncrement}\r\n        >\r\n          <AiOutlineMinus />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Session;\r\n","import React from \"react\";\r\nimport { IoMdAdd } from \"react-icons/io\";\r\nimport { AiOutlineMinus } from \"react-icons/ai\";\r\nconst Break = ({ breakLength, breakIncrement, changeTime, type, play }) => {\r\n  return (\r\n    <div id=\"break-label\">\r\n      <h2>Break Time</h2>\r\n      <div className=\"btn-container\">\r\n        <button\r\n          disabled={play}\r\n          className=\"btn\"\r\n          id=\"break-increment\"\r\n          onClick={breakIncrement}\r\n        >\r\n          <IoMdAdd />\r\n        </button>\r\n        <h2 id=\"break-length\">{breakLength}</h2>\r\n        <button\r\n          disabled={play}\r\n          className=\"btn\"\r\n          id=\"break-decrement\"\r\n          onClick={breakIncrement}\r\n        >\r\n          <AiOutlineMinus />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Break;\r\n","import React from \"react\";\r\nimport { BsFillPlayFill } from \"react-icons/bs\";\r\nimport { BiPause } from \"react-icons/bi\";\r\nimport { GrPowerReset } from \"react-icons/gr\";\r\n\r\nconst Timer = ({\r\n  startTimer,\r\n  resetTimer,\r\n  timeLeft,\r\n  formateTime,\r\n  play,\r\n  audio,\r\n  title,\r\n}) => {\r\n  return (\r\n    <div id=\"timer\">\r\n      <h3 id=\"timer-label\">{title}</h3>\r\n      <h1 id=\"time-left\">{formateTime()}</h1>\r\n      <div className=\"timer-btns\">\r\n        <button className=\"btn\" id=\"start_stop\" onClick={startTimer}>\r\n          {play ? <BiPause /> : <BsFillPlayFill />}\r\n        </button>\r\n        <button className=\"btn\" id=\"reset\" onClick={resetTimer}>\r\n          <GrPowerReset />\r\n        </button>\r\n      </div>\r\n      <audio\r\n        id=\"beep\"\r\n        preload=\"auto\"\r\n        src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Timer;\r\n","import React, { useEffect, useState } from \"react\";\nimport Session from \"./Session\";\nimport Break from \"./Break\";\nimport Timer from \"./Timer\";\n\nfunction App() {\n  const [sessionLength, setSessionLength] = useState(25);\n  const [breakLength, setBreakLength] = useState(5);\n  const [timeLeft, setTimeLeft] = useState(1500);\n  const [timingType, setTimingType] = useState(\"SESSION\");\n  const [play, setPlay] = useState(false);\n\n  const timeout = setTimeout(() => {\n    if (timeLeft && play) {\n      setTimeLeft(timeLeft - 1);\n    }\n  }, 1000);\n\n  /* ==============[this will increase the time of session and breake]================ */\n  const sessionIncrement = (e) => {\n    const value = e.currentTarget.id;\n    if (value === \"session-increment\" && sessionLength < 60) {\n      setSessionLength((prev) => prev + 1);\n      setTimeLeft(timeLeft + 60);\n    } else if (value === \"session-decrement\" && sessionLength > 1) {\n      setSessionLength((prev) => prev - 1);\n      setTimeLeft(timeLeft - 60);\n    }\n  };\n  /* ==============[]================ */\n\n  const breakIncrement = (e) => {\n    const value = e.currentTarget.id;\n    if (value === \"break-increment\" && breakLength < 60) {\n      setBreakLength((prev) => prev + 1);\n    } else if (value === \"break-decrement\" && breakLength > 1) {\n      setBreakLength((prev) => prev - 1);\n    }\n  };\n\n  /* ==============[this will start timer of session and breake]================ */\n\n  /* ==============[this will reset the timer]================ */\n  const resetTimer = () => {\n    clearTimeout(timeout);\n    setPlay(false);\n    setTimeLeft(1500);\n    setBreakLength(5);\n    setSessionLength(25);\n    setTimingType(\"SESSION\");\n    const audio = document.getElementById(\"beep\");\n    audio.pause();\n    audio.currentTime = 0;\n  };\n\n  /* ==============[]================ */\n  const startTimer = () => {\n    clearTimeout(timeout);\n    setPlay(!play);\n  };\n  const resetTime = () => {\n    const audio = document.getElementById(\"beep\");\n\n    if (!timeLeft && timingType === \"SESSION\") {\n      setTimeLeft(breakLength * 60);\n      setTimingType(\"BREAK\");\n      audio.play();\n    }\n    if (!timeLeft && timingType === \"BREAK\") {\n      setTimeLeft(sessionLength * 60);\n      setTimingType(\"SESSION\");\n      audio.pause();\n      audio.currentTime = 0;\n    }\n  };\n  const clock = () => {\n    if (play) {\n      return timeout, resetTime();\n    } else {\n      clearTimeout(timeout);\n    }\n  };\n\n  useEffect(() => {\n    clock();\n  }, [play, timeLeft, timeout]);\n\n  /* ==============[]================ */\n\n  /* ==============[this will formate the time in min:sec]================ */\n  const formateTime = () => {\n    let minutes = Math.floor(timeLeft / 60);\n    let second = timeLeft % 60;\n    return (\n      (minutes < 10 ? \"0\" + minutes : minutes) +\n      \":\" +\n      (second < 10 ? \"0\" + second : second)\n    );\n  };\n\n  const title = timingType === \"SESSION\" ? \"SESSION\" : \"BREAK\";\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>Timer</h1>\n        <div className=\"underline\"></div>\n      </div>\n      <Session\n        sessionLength={sessionLength}\n        sessionIncrement={sessionIncrement}\n        type={\"session\"}\n        play={play}\n      />\n      <Break\n        breakLength={breakLength}\n        type={\"break\"}\n        breakIncrement={breakIncrement}\n        play={play}\n      />\n      <Timer\n        startTimer={startTimer}\n        resetTimer={resetTimer}\n        title={title}\n        timeLeft={timeLeft}\n        formateTime={formateTime}\n        play={play}\n      />\n    </div>\n  );\n}\n\nexport default App;\n\n/*<===============================================================*/\n\n/* function MyTimer(callback, sessionTimeMin, sessionSecond) {\n  sessionSecond = 10;\n  sessionTimeMin = 25;\n  var timer = setInterval(function () {\n    callback(sessionSecond);\n    if (sessionSecond-- <= 0) {\n      sessionTimeMin--;\n      Break();\n    }\n  }, 1000);\n}\nnew MyTimer(function (sessionSecond, sessionTimeMin) {\n  var timerMsg =\n    `${sessionTimeMin}:` +\n    (sessionSecond >= 10 ? sessionSecond : \"0\" + sessionSecond);\n  console.log(timerMsg);\n}); */\n\n/* \nlet second = 1000;\n    let date = new Date().getTime();\n    let nextDate = new Date().getTime() + second;\n    let onBreakVariable = breakTime;\n    console.log(onBreakVariable);\n    if (!start) {\n      let interval = setInterval(() => {\n        date = new Date().getTime();\n        if (date > nextDate) {\n          setTime((prev) => {\n            if (prev <= 0 && !onBreakVariable) {\n              playSound();\n              setBreakTime(true);\n              onBreakVariable = true;\n              console.log(`session to break ${breakTime}`);\n              return breakMin;\n            } else if (prev <= 0 && onBreakVariable) {\n              playSound();\n              onBreakVariable = false;\n              setBreakTime(false);\n              console.log(`break to session ${breakTime}`);\n              return sessionMin;\n            }\n            return prev - 1;\n          });\n          nextDate += second;\n        }\n      }, 30);\n      localStorage.clear();\n      localStorage.setItem(\"interval-id\", interval);\n    }\n    if (start) {\n      clearInterval(localStorage.getItem(\"interval-id\"));\n    }\n    setStart(!start);\n  }; */\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />,\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}